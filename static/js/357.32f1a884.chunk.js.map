{"version":3,"file":"static/js/357.32f1a884.chunk.js","mappings":"yNAgDA,UA5CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAkBH,GAFzC,OAEUI,EAFV,OAGIT,EAAWS,GACXP,EAAWO,EAAKR,SAJpB,gDAMIG,EAAS,EAAD,IANZ,0DADc,uBAAC,WAAD,wBAUdM,EACD,GAAE,CAACL,IAEJ,IAAMM,EAAiBV,EAAQW,OAE/B,OACE,gCACGT,IAAS,6CACTF,EAAQW,OAAS,IAChB,sEAEDD,IACC,wBACGZ,EAAQE,QAAQY,KAAI,SAAAC,GACnB,OACE,2BACE,qCAAaA,EAAKC,WAClB,uBAAID,EAAKE,YAFFF,EAAKG,GAKjB,QAKV,C,uKC5CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACgBF,EAAAA,EAAAA,IAAA,qCAAwCC,IADxD,cACCE,EADD,yBAGEA,EAAOZ,MAHT,kEAMA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAiCjB,GAAjC,uFACea,EAAAA,EAAAA,IAAA,gBACTb,EADS,oBACUc,EADV,oBADf,cACCI,EADD,yBAKEA,EAAMd,MALR,kEAQA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAA8BnB,GAA9B,uFACea,EAAAA,EAAAA,IAAA,gBACTb,EADS,4BACkBc,EADlB,oBADf,cACCI,EADD,yBAKEA,EAAMd,MALR,kEAQA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACea,EAAAA,EAAAA,IAAA,gBACTb,EADS,4BACkBc,EADlB,oBADf,cACCI,EADD,yBAKEA,EAAMd,MALR,kE","sources":["components/Reviews.js","services/getMovies.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieReviews } from '../services/getMovies';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState({});\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        const data = await fetchMovieReviews(movieId);\n        setReviews(data);\n        setResults(data.results);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  const reviewsResults = results.length;\n\n  return (\n    <>\n      {error && <div>Something wrong</div>}\n      {results.length < 1 && (\n        <div>We don't have any reviews for this movie</div>\n      )}\n      {reviewsResults && (\n        <ul>\n          {reviews.results.map(item => {\n            return (\n              <li key={item.id}>\n                <h3>Author: {item.author}</h3>\n                <p>{item.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '51114562faac57108ae3113fba230ec4';\n\nexport async function fetchTrending() {\n  const movies = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return movies.data;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const movie = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return movie.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const movie = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return movie.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const movie = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return movie.data;\n}\n"],"names":["useState","reviews","setReviews","results","setResults","error","setError","movieId","useParams","useEffect","fetchMovieReviews","data","fetchReviews","reviewsResults","length","map","item","author","content","id","axios","API_KEY","fetchTrending","movies","fetchMovieDetails","movie","fetchMovieCast"],"sourceRoot":""}