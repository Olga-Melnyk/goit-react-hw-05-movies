{"version":3,"file":"static/js/806.26b0119c.chunk.js","mappings":"iQAEaA,GAAkBC,E,OAAAA,IAAO,MAAPA,CAAH,6G,SCkD5B,EA9CgB,WACd,OAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,IAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAkBH,GAFzC,OAEUI,EAFV,OAGIT,EAAWS,GACXP,EAAWO,EAAKR,SAJpB,gDAMIG,EAAS,EAAD,IANZ,0DADc,uBAAC,WAAD,wBAUdM,EACD,GAAE,CAACL,IAEJ,IAAMM,EAAiBV,EAAQW,OAE/B,OACE,gCACGT,IAAS,6CACTF,EAAQW,OAAS,IAChB,SAAChB,EAAD,uDAIDe,IACC,wBACGZ,EAAQE,QAAQY,KAAI,SAAAC,GACnB,OACE,2BACE,qCAAaA,EAAKC,WAClB,uBAAID,EAAKE,YAFFF,EAAKG,GAKjB,QAKV,C,+LChDDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACiBF,EAAAA,EAAAA,IAAA,qCAAwCC,IADzD,cACCE,EADD,yBAGEA,EAAQZ,MAHV,kEAMA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAiCjB,GAAjC,uFACiBa,EAAAA,EAAAA,IAAA,gBACXb,EADW,oBACQc,EADR,oBADjB,cACCE,EADD,yBAKEA,EAAQZ,MALV,kEAQA,SAAec,EAAtB,+CAAO,OAAP,oBAAO,WAA8BlB,GAA9B,uFACiBa,EAAAA,EAAAA,IAAA,gBACXb,EADW,4BACgBc,EADhB,oBADjB,cACCE,EADD,yBAKEA,EAAQZ,MALV,kEAQA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,uFACiBa,EAAAA,EAAAA,IAAA,gBACXb,EADW,4BACgBc,EADhB,oBADjB,cACCE,EADD,yBAKEA,EAAQZ,MALV,kEAQA,SAAee,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACeP,EAAAA,EAAAA,IAAA,+BACMC,EADN,iCACsCM,EADtC,gCADf,cACCC,EADD,yBAKEA,EAAMjB,MALR,kE","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.js","services/getMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsNotFound = styled('div')`\n  padding: 15px;\n  margin-bottom: 25px;\n  text-align: center;\n  font-size: 30px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieReviews } from '../../services/getMovies';\n\nimport { ReviewsNotFound } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState({});\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        const data = await fetchMovieReviews(movieId);\n        setReviews(data);\n        setResults(data.results);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  const reviewsResults = results.length;\n\n  return (\n    <>\n      {error && <div>Something wrong</div>}\n      {results.length < 1 && (\n        <ReviewsNotFound>\n          We don't have any reviews for this movie\n        </ReviewsNotFound>\n      )}\n      {reviewsResults && (\n        <ul>\n          {reviews.results.map(item => {\n            return (\n              <li key={item.id}>\n                <h3>Author: {item.author}</h3>\n                <p>{item.content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '51114562faac57108ae3113fba230ec4';\n\nexport async function fetchTrending() {\n  const respons = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return respons.data;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const respons = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return respons.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const respons = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return respons.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const respons = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return respons.data;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const movie = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return movie.data;\n}\n"],"names":["ReviewsNotFound","styled","useState","reviews","setReviews","results","setResults","error","setError","movieId","useParams","useEffect","fetchMovieReviews","data","fetchReviews","reviewsResults","length","map","item","author","content","id","axios","API_KEY","fetchTrending","respons","fetchMovieDetails","fetchMovieCast","fetchMovieByQuery","query","movie"],"sourceRoot":""}