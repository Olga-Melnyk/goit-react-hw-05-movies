{"version":3,"file":"static/js/514.051eedf3.chunk.js","mappings":"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","sources":["components/MovieCard/MovieCard.styled.js","components/MovieCard/MovieCard.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js","services/getMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieDetailsCard = styled('div')`\n  display: flex;\n  padding: 20px;\n  gap: 50px;\n  justify-content: center;\n  background-color: grey;\n`;\nexport const MovieDetailsImg = styled('img')`\n  display: block;\n`;\nexport const MovieDetailsAbout = styled('div')`\n  padding: 20px;\n  border: 2px solid black;\n  width: 600px;\n  background-color: white;\n`;\nexport const MovieDetailsTitle = styled('h1')`\n  text-align: center;\n  font-size: 35px;\n`;\nexport const MovieDetailsScore = styled('p')`\n  font-size: 25px;\n`;\nexport const MovieDetailsOverview = styled('h2')`\n  font-size: 25px;\n`;\nexport const MovieDetailsOverviewText = styled('p')`\n  font-size: 20px;\n`;\nexport const MovieDetailsGenres = styled('h2')`\n  font-size: 25px;\n`;\nexport const MovieDetailsGenresText = styled('p')`\n  font-size: 20px;\n`;\n","import PropTypes from 'prop-types';\n\nimport {\n  MovieDetailsCard,\n  MovieDetailsImg,\n  MovieDetailsAbout,\n  MovieDetailsTitle,\n  MovieDetailsScore,\n  MovieDetailsOverview,\n  MovieDetailsOverviewText,\n  MovieDetailsGenres,\n  MovieDetailsGenresText,\n} from './MovieCard.styled';\n\nexport const MovieCard = ({ movie }) => {\n  let poster;\n  if (movie.poster_path) {\n    poster = `https://image.tmdb.org/t/p/w400/${movie.poster_path}`;\n  } else {\n    poster = `https://www.wallpaper-box.com/smartphone/wp-content/uploads/2015/01/Abstract-Connected-Lines-3D-Render-iPhone-6-Plus-HD-Wallpaper.jpg`;\n  }\n\n  return (\n    <MovieDetailsCard>\n      <MovieDetailsImg src={poster} width=\"400\" alt={movie.title} />\n      <MovieDetailsAbout>\n        <MovieDetailsTitle>\n          {movie.title}({new Date(movie.release_date).getFullYear()})\n        </MovieDetailsTitle>\n\n        <MovieDetailsScore>\n          User Score: {Math.round(movie.vote_average * 10)}%\n        </MovieDetailsScore>\n        <MovieDetailsOverview>Overview</MovieDetailsOverview>\n        <MovieDetailsOverviewText>{movie.overview}</MovieDetailsOverviewText>\n        <MovieDetailsGenres>Gengres</MovieDetailsGenres>\n        <MovieDetailsGenresText>\n          {movie.genres.map(genre => genre.name).join(', ')}\n        </MovieDetailsGenresText>\n      </MovieDetailsAbout>\n    </MovieDetailsCard>\n  );\n};\n\nMovieCard.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const LinkBox = styled('div')`\n  padding: 20px;\n`;\n\nexport const LinkBack = styled(Link)`\n  display: inline-block;\n  padding: 10px;\n  text-decoration: none;\n  border-radius: 5px;\n  font-size: 20px;\n  font-weight: 700;\n  color: white;\n  border: 2px solid black;\n  background-color: grey;\n  &:hover,\n  :focus {\n    background-color: white;\n    color: black;\n    scale: calc(1.03);\n    box-shadow: 0px 0px 15px 6px black;\n  }\n`;\n\nexport const MovieDetailsAdditional = styled('div')`\n  padding: 50px;\n`;\n\nexport const MovieDetailsAdditionalTitle = styled('h2')`\n  margin-top: 0;\n  font-size: 25px;\n`;\n\nexport const LinkItem = styled(Link)`\n  display: inline-block;\n  padding: 10px;\n  text-decoration: none;\n  font-size: 25px;\n  color: black;\n  border-radius: 5px;\n  border: 2px solid black;\n  &:focus,\n  :hover {\n    color: white;\n    background-color: grey;\n    scale: calc(1.03);\n    box-shadow: 0px 0px 15px 6px black;\n  }\n  &:not(:last-child) {\n    margin-right: 40px;\n  }\n`;\n","import { useRef, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { fetchMovieDetails } from '../../services/getMovies';\nimport { Loader } from '../../components/Loader/Loader';\nimport { MovieCard } from '../../components/MovieCard/MovieCard';\n\nimport {\n  LinkBox,\n  LinkBack,\n  MovieDetailsAdditional,\n  MovieDetailsAdditionalTitle,\n  LinkItem,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    async function fetchMovie() {\n      try {\n        const data = await fetchMovieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  const emptyMovie = Object.keys(movie).length;\n\n  return (\n    <>\n      {error && <div>Something wrong</div>}\n\n      {emptyMovie && (\n        <>\n          <LinkBox>\n            <LinkBack to={backLinkLocationRef.current}>Go back</LinkBack>\n          </LinkBox>\n\n          <MovieCard movie={movie} />\n          <MovieDetailsAdditional>\n            <MovieDetailsAdditionalTitle>\n              Additional information\n            </MovieDetailsAdditionalTitle>\n            <LinkItem to=\"cast\">Cast</LinkItem>\n            <LinkItem to=\"reviews\">Reviews</LinkItem>\n          </MovieDetailsAdditional>\n        </>\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '51114562faac57108ae3113fba230ec4';\n\nexport async function fetchTrending() {\n  const respons = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return respons.data;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const respons = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return respons.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const respons = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return respons.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const respons = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return respons.data;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const movie = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return movie.data;\n}\n"],"names":["MovieDetailsCard","styled","MovieDetailsImg","MovieDetailsAbout","MovieDetailsTitle","MovieDetailsScore","MovieDetailsOverview","MovieDetailsOverviewText","MovieDetailsGenres","MovieDetailsGenresText","MovieCard","poster","movie","poster_path","src","width","alt","title","Date","release_date","getFullYear","Math","round","vote_average","overview","genres","map","genre","name","join","LinkBox","LinkBack","Link","MovieDetailsAdditional","MovieDetailsAdditionalTitle","LinkItem","useState","setMovie","error","setError","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovieDetails","data","fetchMovie","emptyMovie","Object","keys","length","to","current","Suspense","fallback","Loader","axios","API_KEY","fetchTrending","respons","fetchMovieCast","fetchMovieReviews","fetchMovieByQuery","query"],"sourceRoot":""}