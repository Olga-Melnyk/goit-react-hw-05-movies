{"version":3,"file":"static/js/219.2def6b5c.chunk.js","mappings":"gRAEaA,GAAWC,EAAAA,EAAAA,IAAO,KAAPA,CAAH,mDAGRC,GAAWD,EAAAA,EAAAA,IAAO,KAAPA,CAAH,kIAORE,GAAaF,EAAAA,EAAAA,IAAO,KAAPA,CAAH,gEAKVG,GAAkBH,EAAAA,EAAAA,IAAO,IAAPA,CAAH,gE,SCkC5B,EA7Ca,WACX,OAA4CI,EAAAA,EAAAA,UAAS,CAAC,GAAtD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEuBC,EAAAA,EAAAA,IAAeH,GAFtC,OAEUI,EAFV,OAGIP,EAAkBO,GAHtB,gDAKIL,EAAS,EAAD,IALZ,0DADc,uBAAC,WAAD,wBASdM,EACD,GAAE,CAACL,IAEJ,IACIM,EADEC,EAAsBC,OAAOC,KAAKb,GAAgBc,OAGxD,OACE,gCACGZ,IAAS,8CACV,SAACN,EAAD,UACGe,GACCX,EAAee,KAAKC,KAAI,SAAAC,GAMtB,OAJEP,EADEO,EAAKC,aACD,0CAAsCD,EAAKC,cAE3C,6HAGN,UAACxB,EAAD,YACE,gBAAKyB,IAAKT,EAAQU,MAAM,MAAMC,OAAO,MAAMC,IAAKL,EAAKM,QACrD,SAAC1B,EAAD,UAAaoB,EAAKM,QAClB,SAACzB,EAAD,UAAkBmB,EAAKO,cAHVP,EAAKQ,GAMvB,QAIV,C,+LC/CDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACiBF,EAAAA,EAAAA,IAAA,qCAAwCC,IADzD,cACCE,EADD,yBAGEA,EAAQrB,MAHV,kEAMA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,WAAiC1B,GAAjC,uFACiBsB,EAAAA,EAAAA,IAAA,gBACXtB,EADW,oBACQuB,EADR,oBADjB,cACCE,EADD,yBAKEA,EAAQrB,MALV,kEAQA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,uFACiBsB,EAAAA,EAAAA,IAAA,gBACXtB,EADW,4BACgBuB,EADhB,oBADjB,cACCE,EADD,yBAKEA,EAAQrB,MALV,kEAQA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAAiC3B,GAAjC,uFACiBsB,EAAAA,EAAAA,IAAA,gBACXtB,EADW,4BACgBuB,EADhB,oBADjB,cACCE,EADD,yBAKEA,EAAQrB,MALV,kEAQA,SAAewB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,uFACeP,EAAAA,EAAAA,IAAA,+BACMC,EADN,iCACsCM,EADtC,gCADf,cACCC,EADD,yBAKEA,EAAM1B,MALR,kE","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","services/getMovies.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastCard = styled('li')`\n  background-color: grey;\n`;\nexport const CastList = styled('ul')`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 30px;\n  list-style-type: none;\n`;\nexport const ActorsName = styled('h3')`\n  color: white;\n  text-align: center;\n`;\n\nexport const ActorsCharacter = styled('p')`\n  text-align: center;\n  color: black;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieCast } from '../../services/getMovies';\n\nimport { CastList, CastCard, ActorsName, ActorsCharacter } from './Cast.styled';\n\nconst Cast = () => {\n  const [castCollection, setCastCollection] = useState({});\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchCast() {\n      try {\n        const data = await fetchMovieCast(movieId);\n        setCastCollection(data);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    fetchCast();\n  }, [movieId]);\n\n  const emptycastCollection = Object.keys(castCollection).length;\n  let poster;\n\n  return (\n    <>\n      {error && <div>Something wrong</div>}\n      <CastList>\n        {emptycastCollection &&\n          castCollection.cast.map(item => {\n            if (item.profile_path) {\n              poster = `https://image.tmdb.org/t/p/w200/${item.profile_path}`;\n            } else {\n              poster = `https://st.depositphotos.com/2101611/4338/v/600/depositphotos_43381243-stock-illustration-male-avatar-profile-picture.jpg`;\n            }\n            return (\n              <CastCard key={item.id}>\n                <img src={poster} width=\"200\" height=\"300\" alt={item.name} />\n                <ActorsName>{item.name}</ActorsName>\n                <ActorsCharacter>{item.character}</ActorsCharacter>\n              </CastCard>\n            );\n          })}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '51114562faac57108ae3113fba230ec4';\n\nexport async function fetchTrending() {\n  const respons = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return respons.data;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const respons = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return respons.data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const respons = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return respons.data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const respons = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n\n  return respons.data;\n}\n\nexport async function fetchMovieByQuery(query) {\n  const movie = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n\n  return movie.data;\n}\n"],"names":["CastCard","styled","CastList","ActorsName","ActorsCharacter","useState","castCollection","setCastCollection","error","setError","movieId","useParams","useEffect","fetchMovieCast","data","fetchCast","poster","emptycastCollection","Object","keys","length","cast","map","item","profile_path","src","width","height","alt","name","character","id","axios","API_KEY","fetchTrending","respons","fetchMovieDetails","fetchMovieReviews","fetchMovieByQuery","query","movie"],"sourceRoot":""}