{"version":3,"file":"static/js/847.422e171e.chunk.js","mappings":"iOAyDA,UApDqB,WAAO,IAAD,IACzB,GAA0BA,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAsBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAa3D,OAXAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,qGACqBC,EAAAA,EAAAA,GAAkBT,GADvC,OACQU,EADR,OAEEC,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAKG,OACjBF,QAAQC,IAAIF,EAAKI,QACjBf,EAASW,GALX,4CADc,uBAAC,WAAD,wBAQdK,EACD,GAAE,CAACf,KAGF,iCACE,SAAC,KAAD,CAAMgB,GAAIZ,EAAoBa,QAA9B,sBACA,0BACGnB,EAAMe,MADT,IACiB,IAAIK,KAAKpB,EAAMqB,cAAcC,cAD9C,QAGA,gBACEC,IAAG,0CAAqCvB,EAAMwB,aAC9CC,IAAKzB,EAAMe,SAEb,wCAAgBW,KAAKC,MAA2B,GAArB3B,EAAM4B,cAAjC,QACA,sCACW,0BAAO5B,EAAM6B,eAKxB,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMX,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,EAAAY,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C,qHCrDDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACgBF,EAAAA,EAAAA,IAAA,qCAAwCC,IADxD,cACCE,EADD,yBAGEA,EAAOvB,MAHT,kEAMA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAAiCT,GAAjC,uFACe8B,EAAAA,EAAAA,IAAA,gBACT9B,EADS,oBACU+B,EADV,oBADf,cACCjC,EADD,yBAKEA,EAAMY,MALR,kE","sources":["pages/MovieDetails.js","services/getMovies.js"],"sourcesContent":["import { useRef, useEffect, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { fetchMovieDetails } from '../services/getMovies';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const { movieId } = useParams();\n\n  const location = useLocation();\n\n  const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    async function fetchMovie() {\n      const data = await fetchMovieDetails(movieId);\n      console.log(data);\n      console.log(data.title);\n      console.log(data.genres);\n      setMovie(data);\n    }\n    fetchMovie();\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkLocationRef.current}>Go back</Link>\n      <h1>\n        {movie.title}({new Date(movie.release_date).getFullYear()})\n      </h1>\n      <img\n        src={`https://image.tmdb.org/t/p/w400/${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n      <p>\n        Overview <span>{movie.overview}</span>\n      </p>\n      {/* <p>\n        Gengres <span>{movie.genres.map(genre => genre.name).join(', ')}</span>\n      </p> */}\n      <h2>Additional information</h2>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '51114562faac57108ae3113fba230ec4';\n\nexport async function fetchTrending() {\n  const movies = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n\n  return movies.data;\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const movie = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return movie.data;\n}\n"],"names":["useState","movie","setMovie","movieId","useParams","location","useLocation","backLinkLocationRef","useRef","state","from","useEffect","fetchMovieDetails","data","console","log","title","genres","fetchMovie","to","current","Date","release_date","getFullYear","src","poster_path","alt","Math","round","vote_average","overview","Suspense","fallback","axios","API_KEY","fetchTrending","movies"],"sourceRoot":""}